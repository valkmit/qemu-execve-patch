===========
What is this?
===========

This is a branch of Qemu with patches applied to allow running child
processes under Qemu as well.

More formally, if a qemu process syscalls execve, by default it will try to
run execve under the host system - if you are in a chroot environment of a
different architecture, nothing will run

However, it still allows native binaries to be run natively!

Why can't I just register qemu as an interpreter using binfmt-misc?
===================================================================

binfmt-misc is the superior solution to this. However, although there are
patches to the Linux kernel to address this, binfmt-misc currently does NOT
have namespace support, meaning it requires a privileged Docker container to
run. This branch does not require a privileged container to achieve the same
behavior.

How do I use it?
================

When you pass `-execve` as an argument to qemu, it will intercept execve calls
to any non-native (i.e., not x86_64 in this case) binaries and run them under
a new instance of qemu.

If the -execve argument is passed, but the binary is a native binary, qemu
will still propogate the environment variables over to the child process - the
default Qemu does not do this.

Credits
=======


This work is based on an existing patch to Qemu that seemingly never made it
into the master branch. You may find it here:
https://lists.gnu.org/archive/html/qemu-devel/2016-01/msg03019.html

Invaluable help in bouncing ideas back and forth.
gh:JosiahWhite
